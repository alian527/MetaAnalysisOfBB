# 导入ggplot2包
library(ggplot2)
rm(list=ls())
# 设置参数
frequency1 <- 360  # 第一个正弦波的频率为430Hz
frequency2 <- 350 # 第二个正弦波的频率为420Hz
amplitude <- 1     # 振幅为1
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 1, length.out = 1000)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
View(data)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "两个正弦波") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
wave_difference <- wave1 - wave2  # 计算两个波的差值
datawav <- data.frame(time, wave_difference)
ggplot(datawav, aes(x = time, y = wave_difference)) +
geom_line(color = "black") +
labs(x = "时间", y = "振幅差值", title = "两个正弦波的振幅差值") +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "两个正弦波") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间", y = "振幅", title = "两个正弦波") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual( "420Hz" = "red")) +
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual( "420Hz" = "red") +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual( red) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual(red) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 1, length.out = 50)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
wave_difference <- wave1 - wave2  # 计算两个波的差值
datawav <- data.frame(time, wave_difference)
ggplot(datawav, aes(x = time, y = wave_difference)) +
geom_line(color = "black") +
labs(x = "时间", y = "振幅差值", title = "两个正弦波的振幅差值") +
theme_minimal()
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 0.1, length.out = 50)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 0.1, length.out = 5000)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 0.05, length.out = 5000)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 0.05, length.out = 50000)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
wave_difference <- wave1 - wave2  # 计算两个波的差值
datawav <- data.frame(time, wave_difference)
ggplot(datawav, aes(x = time, y = wave_difference)) +
geom_line(color = "black") +
labs(x = "时间", y = "振幅差值", title = "两个正弦波的振幅差值") +
theme_minimal()
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 0.5, length.out = 50000)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间", y = "振幅", title = "420Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
wave_difference <- wave1 - wave2  # 计算两个波的差值
datawav <- data.frame(time, wave_difference)
ggplot(datawav, aes(x = time, y = wave_difference)) +
geom_line(color = "black") +
labs(x = "时间", y = "振幅差值", title = "两个正弦波的振幅差值") +
theme_minimal()
ggplot(datawav, aes(x = time, y = wave_difference)) +
geom_line(color = "black") +
labs(x = "时间", y = "振幅差值", title = "声波叠加") +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间/s", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间/s", y = "振幅", title = "420Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
wave_difference <- wave1 - wave2  # 计算两个波的差值
datawav <- data.frame(time, wave_difference)
ggplot(datawav, aes(x = time, y = wave_difference)) +
geom_line(color = "black") +
labs(x = "时间/s", y = "振幅差值", title = "声波叠加") +
theme_minimal()
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 0.2, length.out = 50000)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间/s", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave2, color = "420Hz")) +
labs(x = "时间/s", y = "振幅", title = "420Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
wave_difference <- wave1 - wave2  # 计算两个波的差值
datawav <- data.frame(time, wave_difference)
ggplot(datawav, aes(x = time, y = wave_difference)) +
geom_line(color = "black") +
labs(x = "时间/s", y = "振幅差值", title = "声波叠加") +
theme_minimal()
windows(width = 16, height =8)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间/s", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 创建一个包含时间和正弦波值的数据框
time <- seq(0, 0.2, length.out = 500000)  # 时间从0到1，共1000个点
wave1 <- amplitude * sin(2 * pi * frequency1 * time)  # 第一个正弦波
wave2 <- amplitude * sin(2 * pi * frequency2 * time)  # 第二个正弦波
data <- data.frame(time, wave1, wave2)
windows(width = 16, height =8)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间/s", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
windows(width = 16, height =8)
ggplot(datawav, aes(x = time, y = wave_difference)) +
geom_line(color = "black") +
labs(x = "时间/s", y = "振幅差值", title = "声波叠加") +
theme_minimal()
windows(width = 16, height =8)
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间/s", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 使用ggplot2绘图
ggplot(data, aes(x = time)) +
geom_line(aes(y = wave1, color = "430Hz")) +
labs(x = "时间/s", y = "振幅", title = "430Hz") +
scale_color_manual(values = c("430Hz" = "blue", "420Hz" = "red")) +
theme_minimal()
# 设置频率和采样率
frequency <- 430 # 频率为430 Hz
sampling_rate <- 10000 # 采样率为10000 Hz，增加采样率以获得更多数据点
# 生成时间序列
time <- seq(0, 1, by = 1/sampling_rate)
# 生成正弦波数据
sin_wave <- sin(2 * pi * frequency * time)
# 画正弦波图
plot(time, sin_wave, type = "l", col = "blue", xlab = "时间（秒）", ylab = "振幅", main = "频率为430 Hz的正弦波")
# 设置频率和采样率
frequency <- 430 # 频率为430 Hz
sampling_rate <- 10000 # 采样率为10000 Hz，增加采样率以获得更多数据点
time <- seq(0, 1, by = 1/sampling_rate)
sin_wave <- sin(2 * pi * frequency * time)
plot(time, sin_wave, type = "l", col = "blue", xlab = "时间（秒）", ylab = "振幅", main = "430 Hz波")
# 设置频率和采样率
frequency <- 430 # 频率为430 Hz
sampling_rate <- 10000 # 采样率为10000 Hz，增加采样率以获得更多数据点
time <- seq(0, 1, by = 1/sampling_rate)
sin_wave <- sin(2 * pi * frequency * time)
plot(time, sin_wave, type = "l", col = "blue", xlab = "时间（秒）", ylab = "振幅", main = "430 Hz")
# 设置频率和采样率
frequency <- 430 # 频率为430 Hz
sampling_rate <- 10000 # 采样率为10000 Hz，增加采样率以获得更多数据点
time <- seq(0, 0.2, by = 1/sampling_rate)
sin_wave <- sin(2 * pi * frequency * time)
plot(time, sin_wave, type = "l", col = "blue", xlab = "时间（秒）", ylab = "振幅", main = "430 Hz")
# 设置频率和采样率
frequency <- 420 # 频率为430 Hz
sampling_rate <- 10000 # 采样率为10000 Hz，增加采样率以获得更多数据点
time <- seq(0, 0.2, by = 1/sampling_rate)
sin_wave <- sin(2 * pi * frequency * time)
plot(time, sin_wave, type = "l", col = "red", xlab = "时间（秒）", ylab = "振幅", main = "420 Hz")
